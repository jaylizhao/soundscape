The issue on Soundscape I decided to tackle was Issue #112, which wanted to fix the language of the app. It always began onboarding in English, even when the iPhone was set to a different language. The suggestion was that the app should instead default to the device's current language (when supported), while still offering users the option to switch during onboarding.
When I first began working on the issue, I was pretty lost. I wasn’t sure where to look, what the existing onboarding looked like, or even how the app handled language selection. I hadn’t seen the onboarding screen during my first run of the app, so I didn’t realize the app initially prompted the user to select their preferred language. That missing context made everything else a lot harder to piece together.
My initial approach was exploratory because I was so intimidated. I jumped into the Language folder, especially the Localization subfolder, and started poking around files like LocalizationContext and UILocalizationSupport. I added checks for mismatches between the app’s language and the device’s system language in LocalizationContext, thinking that might be the appropriate place. But, I was not confident in what those files did, and looking back, I didn’t have a clear approach.
Eventually, I figured out that the user was asked their preferred language during the setup and onboarding of the app. I noticed that I could reintroduce the language selection menu that was previously asked when the languages differed. I, thus, turned to the AppDelegate, since I knew it handled key app functions and was a common place to run code. I tried to make the language selection logic there to both store the user’s language preference and bring back the onboarding screen when the app detected a language mismatch. I managed to get the language selection screen to reappear correctly when the app launched in a different device language than what had been previously selected. 
However, the “Continue” button on the language onboarding screen was not working. Even though the screen appeared as expected and allowed a new language to be chosen, it wouldn’t proceed past that step. After some digging, I realized this was likely because I had messed up the flow and muddled up the AppDelegate. It ended up creating a messy implementation that didn’t keep the original flow of the onboarding transitions.
So, looking back, my biggest error was jumping straight into implementation before fully understanding how the onboarding process worked or where language preferences were stored and referenced. I also made things harder on myself by not resetting the app’s onboarding state, which could’ve helped me see the intended operations from the start.